install_url("https://github.com/satijalab/seurat/releases/download/v1.4.0/Seurat_1.4.0.8.tgz", binary = TRUE)#
library(Seurat)
library(devtools)
20.8-19.40
1.4*5000
40-20.40
19.6*5000
6*5000
98000+30000
2890-950-200-600
1961+232
543+9+202+227
1392+20+0+580+0+755+3
766200-0.40*766200
459720/12
509+554+541
1100+1193
library("rhdf5")
install.packages("rhdf5")
160479-900000
739521-160479
65113*2
130226+169071
6700-2123
34740*2
25740+18000
890+490
890*2
1780+490
956*2
1912*4
source("https://bioconductor.org/biocLite.R")#
biocLite("BSgenome.Mmusculus.UCSC.mm9")
source("https://bioconductor.org/biocLite.R")#
biocLite("BSgenome.Mmusculus.UCSC.mm9.masked")
925*2
958+500
958+400
50000*12
50000*12*3
430000-200000
1098+1193
350*12
1970/3
80-55
400+397
400+397+396
430000/3
430000/2
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig3c.#
################################################################################
my.anno<-read.delim("../Data/CML_PROJECT_ALL_CELLs.Freezed-5.anno.txt",header=T)#
my.anno<-subset(my.anno,used4analysis==1)#
my.anno<-subset(my.anno,Stage_2=="normal_hsc"| Stage_2=="diagnosis")#
#
my.tsne<-read.table("tSNE.8589.genes.txt",header=T)#
my.data<-read.table("Normal_HSCs_and_Diagnosis_Cells.for.TSNE.txt",header=T)#
#
#################################################################################
my.tsne$Cell<-colnames(my.data)#
#
my.dat<-merge(my.tsne,my.anno,by.x="Cell",by.y="Cell",all=T)#
my.dat$my.color<-"blue"#
my.dat$my.color[my.dat$BCR_ABL=="negative_low_gapdh"]<-"blue"#
my.dat$my.color[my.dat$BCR_ABL=="positive"]<-"red"#
my.dat$my.color[my.dat$BCR_ABL=="normal"]<-"black"#
x1<-which(my.dat$my.color=="blue")#
x2<-which(my.dat$my.color=="red")#
x3<-which(my.dat$my.color=="black")
400000*0.2
697108-310000
387108+200000
587108-10000-50000-35000-43000-50000
25920*0.32
(25920+500)*0.32
620*2
620*2+200
3027-2960.21
3027-2960
200*2*3
250*4
604388-120000
604388-120000-350000
134388+200000
17/40
(17/40)*100
604388-118400
485988-350000
604388-118400
604388-118400-320000
604388-118400-320000-30000
135988+200000
463003-350000
0.3125*200000
468203-315000
468203-315000-72000
200000*0.3125
125*4
11856/6
125*4
468203-72000
468203-72000-330000
18/24
0.3090*200000
0.3120*200000
35000*12
35000*12*5
0.3075*200000
500000/70
1937-2016
1941-2016
787*2
1560*2
787*2
54318+53442
804*2+787*2
33520-2090
33520/12
.3090*200000
6874+7023+7023+6874
0.3070*200000
2112468/12
669+374
4037-1043
33520/12
2793-2090
703/2793
25*4000
0.25*4000
60000/44.1
100000/44.1
35714*30
source("https://bioconductor.org/biocLite.R")#
biocLite("r3Cseq")
48327/12
1205/12
120+19+630+100
120+19+630+500
1269-2900
500000/25
500000/(25*12)
300000/(25*12)
409+248+2924
library(scater)#
library(SC3)#
treutlein[1:3, 1:3]
ann <- data.frame(cell_type1 = colnames(treutlein))#
pd <- new("AnnotatedDataFrame", data = ann)#
# cell expression#
tmp <- treutlein#
colnames(tmp) <- rownames(ann)#
# SCESEt object#
sceset <- newSCESet(fpkmData = tmp, phenoData = pd, logExprsOffset = 1)
sceset
sceset <- calculateQCMetrics(sceset)
plotPCA(sceset, colour_by = "cell_type1")
sceset <- sc3(sceset, ks = 2:4, biology = TRUE, n_cores = 1)
sceset
sc3_plot_consensus(sceset, k = 3)
sc3_consensus()
1262*3
install_url("https://github.com/satijalab/seurat/releases/download/v1.4.0/Seurat_1.4.0.16.tgz", binary = TRUE)#
library(Seurat)
library(Seurat)
library(GSE5859Subset)#
data(GSE5859Subset)
library(limma)
?RemoveBatchEffect
source("https://bioconductor.org/biocLite.R")#
biocLite()
source("https://bioconductor.org/biocLite.R")#
biocLite("r3Cseq")
exit
8700+4700
1529-640
889-400
400*45
889-500
500-45
500*45
889-400
75000/12
6250-0.36*6250
library(Seurat)
Read10X
showMethod(Read10X)
showMethod('Read10X')
showMethod("Read10X")
class(Seurat)
showMethods("Read10X")
methods("Read10X")
getAnywhere(Read10X)
showMethods(Read10X)
getMethod("Read10X")
# Author: supat#
################################################################################
library(Seurat)#
################################################################################
library(dplyr)#
library(Matrix)#
library(beeswarm)#
################################################################################
source("RNA-Seq-S1.R")#
# Load Sample4 data set#
########################
########################
my.s4 <- Read10X("../Data/Sample4/filtered_gene_bc_matrices/hg19/")
head(my.s4)
################################################################################
library(Seurat)#
################################################################################
library(dplyr)#
library(Matrix)#
library(beeswarm)#
################################################################################
source("RNA-Seq-S1.R")#
# Load Sample4 data set#
########################
########################
my.s4 <- Read10X("../Data/Sample4/filtered_gene_bc_matrices/hg19/")#
#
#####1.Cell filtering###########################################################
S4.n.genePerCell<-getNumberOfDetectedGenesPerCell(my.s4,1)
S4.n.genePerCell
S4.n.genePerCell<-getNumberOfDetectedGenesPerCell(my.s4,1)#
my.selected.cells<-subset(S4.n.genePerCell,num_genes_detected>=500)
nrow(my.selected.cells)
nrow(S4.n.genePerCell)
rownames(my.selected.cells)
my.cells<-my.s4[,as.character(rownames(my.selected.cells))]
nrow(my.cells)
ncol(my.cells)
CountCellPerGene<-getNumberOfDetectedCellsPerGene(my.cells,1)
head(CountCellPerGene)
hist(CountCellPerGene$num_detected_cells)
hist(CountCellPerGene$num_detected_cells,breaks=100)
min(CountCellPerGene$num_detected_cells)
max(CountCellPerGene$num_detected_cells)
x<-subset(CountCellPerGene,num_detected_cells==1981)
x
x<-subset(CountCellPerGene,num_detected_cells >=1500)
x
hist(CountCellPerGene$num_detected_cells,breaks=100)
hist(CountCellPerGene$num_detected_cells,breaks=150)
2000*0.1
2000*0.01
mito.genes <- grep("^MT-", rownames(my.cells), value = T)
mito.genes
colSums(my.cells)
colSums(my.cells[mito.genes, ])/colSums(my.cells)
colSums(my.cells[mito.genes, ])/colSumscolSums(my.cells[mito.genes, ])(my.cells)
colSums(my.cells[mito.genes, ])
mito.genes <- grep("^MT-", rownames(my.cells), value = T)#
percent.mito <- colSums(my.cells[mito.genes, ])/colSums(my.cells)
percent.mito
percent.mito[mito.genes <- grep("^MT-", rownames(my.cells), value = T)#
percent.mito <- colSums(my.cells[mito.genes, ])/colSums(my.cells)]
mito.genes <- grep("^MT-", rownames(my.cells), value = T)#
percent.mito <- colSums(my.cells[mito.genes, ])/colSums(my.cells)
percent.mito[percent.mito < 0.1]
length(percent.mito[percent.mito < 0.1])
boxplot(percent.mito)
hist(percent.mito)
legnth(percent.mito)
legnth(percent.mito)
percent.mito
nrow(my.cells)
ncol(my.cells)
percent.mito.info<-data.frame(cell=colnames(my.cells),percent.mito=colSums(my.cells[mito.genes, ])/colSums(my.cells))
head(percent.mito.info)
percent.mito.info<-data.frame(percent.mito=colSums(my.cells[mito.genes, ])/colSums(my.cells))
percent.mito.info
head(percen.mito.info)
head(percent.mito.info)
x<-subset(percent.mito.info,percent.mito < 0.1)
nrow(x)
nrow(percent.mito.info)
x<-subset(percent.mito.info,percent.mito < 0.15)
nrow(x)
x<-subset(percent.mito.info,percent.mito < 0.10)
nrow(x)
#####1.Cell filtering###########################################################
S4.n.genePerCell<-getNumberOfDetectedGenesPerCell(my.s4,1)#
my.selected.cells<-subset(S4.n.genePerCell,num_genes_detected>=500)#
################################################################################
my.cells<-my.s4[,as.character(rownames(my.selected.cells))]#
#
mito.genes <- grep("^MT-", rownames(my.cells), value = T)#
percent.mito.info<-data.frame(percent.mito=colSums(my.cells[mito.genes, ])/colSums(my.cells))#
my.selected.cells<-subset(percent.mito.info,percent.mito < 0.1)#
my.cells.f<-my.cells[,as.character(rownames(my.selected.cells))]
ncol(my.cells.f)
head(my.cells.f)
CountCellPerGene<-getNumberOfDetectedCellsPerGene(my.cells.f,1)#
CountCellPerGene.filtered<-subset(CountCellPerGene,num_detected_cells > 5)
CountCellPerGene<-getNumberOfDetectedCellsPerGene(my.cells.f,1)#
CountCellPerGene.filtered<-subset(CountCellPerGene,num_detected_cells >= 10)
CountCellPerGene.filtered
nrow(CountCellPerGene.filtered)
my.cells.f<-my.cells[rownames(my.cells) %in% rownames(CountCellPerGene.filtered),]
nrow(my.cells.f)
head(my.cells.f)
min_expr<-1#
S.m<-as.matrix(my.cells.f)#
S.m<-log2(S.m+1)#
###########################
#########################Get CV#################################################
S.m<-as.matrix(my.cells.f)#
my.mean<-rowMeans(S.m[,c(1:ncol(S.m))])#
vars.S <- rowSds(S.m)#
my.cv <- vars.S / my.mean#
################################################################################
#################################Model CV vs Mean###############################
n.m<-data.frame(mean=log2(my.mean),cv=my.cv)#
rownames(n.m)<-rownames(S.m)#
n.m<-na.omit(n.m)#
################################################################################
lowess <- loess(n.m$cv~n.m$mean,span=0.65)#
#
n.m$predicted.cv<-predict(lowess,n.m$mean)#
n.m$usedGene<-F#
n.m$usedGene[n.m$predicted.cv < n.m$cv & n.m$mean >= 0]<-T#
n.m.used<-subset(n.m,usedGene ==T)#
#
#pdf(file="Mean_Vs_CV_Diagnosis_Neg_Lowess.pdf", width=6, height=6, onefile=T, bg="transparent",fonts = NULL,useDingbats=FALSE)#
#
plot(n.m$mean,n.m$cv,pch=19,col="black",xlab="Mean of RPKM, Log2",ylab="Coefficient of variation (CV)",cex=0.2,#
		main="Diagnosis BCR-ABL- cells")#
xl <- seq(min(n.m$mean), max(n.m$mean), length.out=100)#
points(n.m.used$mean,n.m.used$cv,col="cyan",pch=19,cex=0.2)#
lines(xl, predict(lowess,xl), col='red', lwd=2)#
#abline(v=0,lwd=2,lty=2,col="red")#
text(10,6,label=nrow(n.m.used))
min_expr<-1#
S.m<-as.matrix(my.cells.f)#
S.m<-log2(S.m+1)
head(S.m)
my.cells.f<-my.cells[rownames(my.cells) %in% rownames(CountCellPerGene.filtered),]#
################################################################################
remove.index<-grep("MIR|SNORA|SNORD",rownames(my.cells.f))#
my.cells.f<-my.cells[-c(remove.index),]#
################################################################################
#########################Get CV#################################################
S.m<-as.matrix(my.cells.f)#
my.mean<-rowMeans(S.m[,c(1:ncol(S.m))])#
vars.S <- rowSds(S.m)#
my.cv <- vars.S / my.mean
library(matrixStats)
S.m<-as.matrix(my.cells.f)#
my.mean<-rowMeans(S.m[,c(1:ncol(S.m))])#
vars.S <- rowSds(S.m)#
my.cv <- vars.S / my.mean#
################################################################################
#################################Model CV vs Mean###############################
n.m<-data.frame(mean=log2(my.mean),cv=my.cv)#
rownames(n.m)<-rownames(S.m)#
n.m<-na.omit(n.m)#
################################################################################
lowess <- loess(n.m$cv~n.m$mean,span=0.65)#
#
n.m$predicted.cv<-predict(lowess,n.m$mean)#
n.m$usedGene<-F#
n.m$usedGene[n.m$predicted.cv < n.m$cv & n.m$mean >= 0]<-T#
n.m.used<-subset(n.m,usedGene ==T)#
#
#pdf(file="Mean_Vs_CV_Diagnosis_Neg_Lowess.pdf", width=6, height=6, onefile=T, bg="transparent",fonts = NULL,useDingbats=FALSE)#
#
plot(n.m$mean,n.m$cv,pch=19,col="black",xlab="Mean of RPKM, Log2",ylab="Coefficient of variation (CV)",cex=0.2,#
		main="Diagnosis BCR-ABL- cells")#
xl <- seq(min(n.m$mean), max(n.m$mean), length.out=100)#
points(n.m.used$mean,n.m.used$cv,col="cyan",pch=19,cex=0.2)#
lines(xl, predict(lowess,xl), col='red', lwd=2)#
#abline(v=0,lwd=2,lty=2,col="red")#
text(10,6,label=nrow(n.m.used))
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig5a.#
################################################################################
my.dat<-read.delim("tSNE_NormalDiagnosisRemission_500_No1M_TKI.FINAL_V4-with-Kmean-Assignment.txt",header=T)#
#########################
my.dat$my.color[my.dat$BCR_ABL=="normal"]<-"black"#
my.dat$my.color[my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="diagnosis"]<-adjustcolor( "gray", alpha.f = 0.2)#
my.dat$my.color[my.dat$remission_class=="A"]<-adjustcolor( "cyan", alpha.f = 0.95)#
my.dat$my.color[my.dat$remission_class=="B"]<-adjustcolor( "blue", alpha.f = 0.95)#
my.dat$type[my.dat$BCR_ABL=="normal"]<-19#
my.dat$type[my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="diagnosis"]<-19#
my.dat$type[my.dat$remission_class=="A"]<-18#
my.dat$type[my.dat$remission_class=="B"]<-17#
x1<-which(my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="diagnosis")#
x2<-which(my.dat$remission_class=="B")#
x3<-which(my.dat$remission_class=="A")#
################save data matrix to a file#####################################
write.table(my.dat[c("Cell","Dim1","Dim2","BCR_ABL","Patient","Stage_1",#
						"remission_class","my.color","type")],#
		file="Fig5a.data.matrix.txt",#
		append=FALSE, sep="\t", quote=FALSE,row.names=FALSE, col.names=TRUE)#
###############################################################################
pdf(file="Fig5a.pdf", width=7, height=7, onefile=T, bg="transparent",fonts = NULL,useDingbats=FALSE)#
plot(my.dat$Dim1,my.dat$Dim2,pch =my.dat$type,#
		xlab = "",#
		ylab = "",#
		main="",col = as.character(my.dat$my.color),cex=1.5,yaxt='n',xaxt='n')#
points(my.dat$Dim1[x2],my.dat$Dim2[x2],pch=24,bg ="blue",col="black",cex=1.5)#
points(my.dat$Dim1[x3],my.dat$Dim2[x3],pch=23,bg ="cyan",col="black",cex=1.5)#
#
legend("bottomright",c("Normal HSC","BCR-ABL+ (diagnosis)","BCR-ABL+ (remission) class A","BCR-ABL+ (remission) class B")#
		,col=c("black","gray","cyan","blue"),pch=c(19,19,18,17),cex=0.85)#
#
dev.off()
my.dat<-read.delim("tSNE_NormalDiagnosisRemission_500_No1M_TKI.FINAL-1.txt",header=T)
head(my.dat)
nrow(my.dat)
plot(my.dat$X1,my.dat$X2)
head(my.dat<-read.delim("tSNE_NormalDiagnosisRemission_500_No1M_TKI.FINAL-1.txt",header=T))
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig5a.#
################################################################################
my.dat<-read.delim("tSNE_NormalDiagnosisRemission_500_No1M_TKI.FINAL-1.txt",header=T)#
#########################
my.dat$my.color[my.dat$BCR_ABL=="normal"]<-adjustcolor( "gray", alpha.f = 0.2)#
my.dat$my.color[my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="diagnosis"]<-"red"#
my.dat$my.color[my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="remission"]<-"pink"
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig5a.#
################################################################################
my.dat<-read.delim("tSNE_NormalDiagnosisRemission_500_No1M_TKI.FINAL-1.txt",header=T)#
#########################
my.dat$my.color[my.dat$BCR_ABL=="normal"]<-adjustcolor( "gray", alpha.f = 0.2)
table(my.dat$BCR_ABL)
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig5a.#
################################################################################
my.dat<-read.delim("tSNE_NormalDiagnosisRemission_500_No1M_TKI.FINAL-1.txt",header=T)#
#########################
my.dat$my.color[my.dat$BCR_ABL=="normal"]<-adjustcolor( "gray", alpha.f = 0.2)
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig5a.#
################################################################################
my.dat<-read.delim("tSNE_NormalDiagnosisRemission_500_No1M_TKI.FINAL-1.txt",header=T)#
#########################
my.dat$my.color[my.dat$BCR_ABL=="normal"]<-adjustcolor( "gray", alpha.f = 0.2)
head(my.dat)
my.dat
my.dat$my.color[my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="diagnosis"]<-"red"#
my.dat$my.color[my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="remission"]<-"pink"
my.dat
head(my.dat)
plot(my.dat$X1,my.dat$X2,pch =19,#
		xlab = "",#
		ylab = "",#
		main="",col = as.character(my.dat$my.color),cex=1.5,yaxt='n',xaxt='n')
#This R script is used to generate Fig5a.#
################################################################################
my.dat<-read.delim("tSNE_NormalDiagnosisRemission_500_No1M_TKI.FINAL-1.txt",header=T)#
#########################
my.dat$my.color[my.dat$BCR_ABL=="normal"]<-adjustcolor( "gray", alpha.f = 0.2)#
my.dat$my.color[my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="diagnosis"]<-adjustcolor( "red", alpha.f = 0.2)#
my.dat$my.color[my.dat$BCR_ABL=="positive" & my.dat$Stage_2=="remission"]<-"blue"#
plot(my.dat$X1,my.dat$X2,pch =19,#
		xlab = "",#
		ylab = "",#
		main="",col = as.character(my.dat$my.color),cex=1.5,yaxt='n',xaxt='n')
