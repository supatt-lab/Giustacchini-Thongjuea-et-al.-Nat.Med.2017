62985*0.2
62985*0.01
62985*0.02
62985*0.04
62985*0.05
62985-65000
62985-66000
62985-69000
25.73*4000
25.73*3000
25.73*55000
25.73*6000
25.73*3000
4500-4500*0.36
2880/12
45000-45000*0.36
28800/12
430000-80000-10000-24000-50000
663203991
13456/57065
11033+2770+20703+9103
43609/57065
24+76
13456+11033+2770+20703+9103
2416+1020+832+264+247+189+168+301+102+178
62782-5717
95239-32457
57065/13456
13456/57065
47000+0.011*47000
517/12
43*45
94993-67456
22809+1553+933+695+322+239+233+283+215+69+186
1635+2523
4158+4992
8275+4992+4158
17425+8988+8729+5579+11142+11593
17425+8988+8729+5579+11142+15593
67456+27533
22809+1553+933+695+322+239+233+283+215+69+186
27537+67456
22809+1553+933+695+322+239+233+283+215+69+186
67456+27537
4158+4992+8275
8275+4992+4158
165+110
110/275
478+376
?fdr
x<-c(0.05,0.007,0.1,1,4,5)
p.adjust(x, method = "BH")
0.05/5
x<-c(0.05,0.007,0.1,1,4,5,10,0.02,12)
p.adjust(x, method = "BH")
x<-c(0.05,0.05,0.02,0.04,0.08)
p.adjust(x, method = "BH")
x<-c(0.05,0.05,0.02,0.04,0.08,0.09,0.1,0.2)
p.adjust(x, method = "BH")
log2(0.01+1)
2872-1100-600
2958-1100-600
31*1000000/3600000
2890-1200-600
71773-25000
46773*12
46773*12*3
46773*12*5
1166+34
1166+34+76
30000/637
636*6
636*10
636*15
636*20
636*30
636*40
636*50
source("https://bioconductor.org/biocLite.R")#
biocLite("devtools")#
biocLite("YosefLab/scone", dependencies=TRUE)
library(scone)
library(SCONE)
library("SCONE")
library("scone")
library(scone)
biocLite("YosefLab/scone", dependencies=TRUE)
source("https://bioconductor.org/biocLite.R")#
biocLite()
source("https://bioconductor.org/biocLite.R")#
biocLite("devtools")#
biocLite("YosefLab/scone", dependencies=TRUE)
install.packages("scran")
source("https://bioconductor.org/biocLite.R")#
biocLite("scran")
source("https://bioconductor.org/biocLite.R")#
biocLite("r3Cseq")
library("scone")
vignette("scone")
vignette(scone)
vignette("scone")
library(scRNAseq)#
#
## ----- Load Example Data -----#
data(fluidigm)#
assay(fluidigm) = assays(fluidigm)$rsem_counts # Set assay to RSEM estimated counts
library(scRNAseq)
source("https://bioconductor.org/biocLite.R")#
biocLite("scRNAseq")
600*7.5
600*20
600*30
600*50
600*60
library(scRNAseq)#
#
## ----- Load Example Data -----#
data(fluidigm)#
assay(fluidigm) = assays(fluidigm)$rsem_counts # Set assay to RSEM estimated counts
fluidigm
head(exprs(fluidigm))
metadata(fluidigm)$which_qc
is_select = colData(fluidigm)$Coverage_Type == "High" #
fluidigm = fluidigm[,is_select]#
#
# Retain only detected transcripts#
fluidigm = fluidigm[which(apply(assay(fluidigm) > 0,1,any)),]
cc <- c(brewer.pal(9, "Set1"))#
#
# One batch per Biological Condition#
batch = factor(colData(fluidigm)$Biological_Condition)#
#
# Alignment Quality Metrics#
qc = colData(fluidigm)[,metadata(fluidigm)$which_qc]#
#
# Barplot of read proportion mapping to human transcriptome#
ralign = qc$RALIGN#
o = order(ralign)[order(batch[order(ralign)])] # Order by batch, then value#
#
barplot(ralign[o], col=cc[batch][o], border=cc[batch][o], main="Percentage of reads mapped")#
legend("bottomleft", legend=levels(batch), fill=cc,cex=0.4)
731*7.69
98*7.69
95*7
30000/95
95*50
95*100
95*200
95*300
95*400
95*500
95*600
34*3600
34*3300
34*3200
5*200000
install.package("rpython")
install.packages("rpython")
install.packages("rPython")
library(genefilter)#
library(statmod)#
require(ggplot2)#
library(gplots)#
require(DESeq2)#
library(scLVM)
install.packages("rPython")
source("https://bioconductor.org/biocLite.R")#
biocLite()
source("https://bioconductor.org/biocLite.R")#
biocLite("genefilter")
install.packages("statmod")
install.packages("rPython")
library(rPython)
python.exec("import sys; print sys.version")
library(rPython)
python.exec("import sys; print sys.version")
system("python --version")
95*8.8
95*100
5000/8
10000/8
10000*10
10000*2
10000*3
10000*4
10000*3
17/24
9.75*905
9.75*95
3000/10.80
375*100
375*50
375*60
375*80
375*20
375*50
375*60
375*80
21-19.40
1.6*5000
2958-950-100-150-40-600
1118*45
1118+500
71481*12
71481*12*3
71481*12*5
48327*0.01
48327+483
10.80-9.60
1.2*375
45000/12
library(fastICA)
library("fastICA")
install.packages("fastICA")
library("fastICA")
highway <- as.matrix(read.table("highway.dat",header=T))#
# just to compare with our PCA and FA analyses from last time#
#
X <- highway[,-1]#
#
pc.cor <- princomp(X,cor=T)#
#
ica <- fastICA(X,n.comp=11)#
names(ica)
install_url("https://github.com/satijalab/seurat/releases/download/v1.4.0/Seurat_1.4.0.8.tgz", binary = TRUE)#
library(Seurat)
library(devtools)
install.packages("devtools")
install_url("https://github.com/satijalab/seurat/releases/download/v1.4.0/Seurat_1.4.0.8.tgz", binary = TRUE)#
library(Seurat)
install_github("satijalab/seurat")
library(devtools)
install_url("https://github.com/satijalab/seurat/releases/download/v1.4.0/Seurat_1.4.0.8.tgz", binary = TRUE)#
library(Seurat)
library(devtools)
20.8-19.40
1.4*5000
40-20.40
19.6*5000
6*5000
98000+30000
2890-950-200-600
1961+232
543+9+202+227
1392+20+0+580+0+755+3
766200-0.40*766200
459720/12
509+554+541
1100+1193
library("rhdf5")
install.packages("rhdf5")
160479-900000
739521-160479
65113*2
130226+169071
6700-2123
34740*2
25740+18000
890+490
890*2
1780+490
956*2
1912*4
source("https://bioconductor.org/biocLite.R")#
biocLite("BSgenome.Mmusculus.UCSC.mm9")
source("https://bioconductor.org/biocLite.R")#
biocLite("BSgenome.Mmusculus.UCSC.mm9.masked")
925*2
958+500
958+400
50000*12
50000*12*3
430000-200000
1098+1193
350*12
1970/3
80-55
400+397
400+397+396
430000/3
430000/2
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig3c.#
################################################################################
my.anno<-read.delim("../Data/CML_PROJECT_ALL_CELLs.Freezed-5.anno.txt",header=T)#
my.anno<-subset(my.anno,used4analysis==1)#
my.anno<-subset(my.anno,Stage_2=="normal_hsc"| Stage_2=="diagnosis")#
#
my.tsne<-read.table("tSNE.8589.genes.txt",header=T)#
my.data<-read.table("Normal_HSCs_and_Diagnosis_Cells.for.TSNE.txt",header=T)#
#
#################################################################################
my.tsne$Cell<-colnames(my.data)#
#
my.dat<-merge(my.tsne,my.anno,by.x="Cell",by.y="Cell",all=T)#
my.dat$my.color<-"blue"#
my.dat$my.color[my.dat$BCR_ABL=="negative_low_gapdh"]<-"blue"#
my.dat$my.color[my.dat$BCR_ABL=="positive"]<-"red"#
my.dat$my.color[my.dat$BCR_ABL=="normal"]<-"black"#
x1<-which(my.dat$my.color=="blue")#
x2<-which(my.dat$my.color=="red")#
x3<-which(my.dat$my.color=="black")
400000*0.2
697108-310000
387108+200000
587108-10000-50000-35000-43000-50000
25920*0.32
(25920+500)*0.32
620*2
620*2+200
3027-2960.21
3027-2960
200*2*3
250*4
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig6d.#
################################################################################
################################################################################
library(RColorBrewer)#
library(pheatmap)#
################################################################################
my.anno<-read.delim("../Data/CML_PROJECT_ALL_CELLs.Freezed-5.anno.txt",header=T,stringsAsFactors=F)#
my.anno<-subset(my.anno,used4analysis==1)#
my.anno<-subset(my.anno,Stage_2=="pre_blast_crisis" | Stage_2=="blast_crisis"  #
				| Stage_2=="blast_crisis_1_month_TKI" | Stage_2=="normal_hsc" | Stage_2=="diagnosis")#
my.anno<-subset(my.anno,Patient !="OX2046cd19" & Patient !="OX1931cd19")#
my.anno<-subset(my.anno,BCR_ABL=="positive" | Stage_2=="normal_hsc")#
################################################################################
load(file="../Data/CML_PROJECT_ALL_CELLs.rdata")#
my.cells<-CML_PROJECT_ALL_CELLs[,as.character(my.anno$Cell)]#
remove.index<-grep("MIR|SNORA|SNORD",rownames(my.cells))#
my.cells<-my.cells[-c(remove.index),]#
################################################################################
min_expr<-1#
S.m<-as.matrix(my.cells)#
S.m[S.m < min_expr]<- 0#
S.m[S.m >= min_expr]<-log2(S.m[S.m >= min_expr])#
################################################################################
################################################################################
l.genes<-c("BANK1","EBF1","FAIM3","LTB","BLNK","CD19","CD79A","DNTT",#
			"IGJ","IRF8","LEF1","LY86","RAG1",#
			"VPREB1","VPREB3","CD33","CEBPA","CSF1R","ID2",#
			"IL3RA","IL6R","LY6E","MCL1","MPO","MSR1")#
################################################################################
my.dat1<-subset(S.m,rownames(S.m) %in% l.genes)#
#
S.m<-data.frame()#
for(i in 1:length(l.genes)){#
	x.gene<-l.genes[i]#
	x.dat<-subset(my.dat1,rownames(my.dat1)==x.gene)#
	S.m<-rbind(S.m,x.dat)#
}#
################################################################################
groupA.anno<-subset(my.anno,Stage_2=="blast_crisis")#
groupA1.anno<-subset(groupA.anno,Patient=="OX2046")#
groupA1.cells<-as.character(groupA1.anno$Cell)#
#
groupA2.anno<-subset(groupA.anno,Patient=="CML1266")#
groupA2.cells<-as.character(groupA2.anno$Cell)#
my.cells<-c("OX1931D5","OX1931F7","OX1931D10","OX1931H9_1","OX1931A3","OX1931D10_1","OX1931E5_1","OX1931H7_1")#
groupB.anno<-subset(my.anno,Patient=="OX1931")#
r.index<-which(groupB.anno$Cell %in% my.cells)#
groupB.anno<-groupB.anno[-c(r.index),]#
groupB.cells<-as.character(groupB.anno$Cell)#
groupC.cells<-c("OX1931D5","OX1931F7","OX1931D10","OX1931H9_1","OX1931A3","OX1931D10_1","OX1931E5_1","OX1931H7_1")#
groupD.anno<-subset(my.anno,Stage_2=="normal_hsc")#
groupD.cells<-as.character(groupD.anno$Cell)#
#
groupE.anno<-subset(my.anno,Stage_2=="diagnosis")#
groupE.cells<-as.character(groupE.anno$Cell)#
#
groupF.anno<-subset(my.anno,Stage_2=="pre_blast_crisis" & Patient=="CML1266")#
groupF.cells<-as.character(groupF.anno$Cell)#
groupG.anno<-subset(my.anno,Stage_2=="blast_crisis_1_month_TKI")#
groupG.cells<-as.character(groupG.anno$Cell)#
groupA1.m<-S.m[,colnames(S.m) %in% groupA1.cells]#
groupA2.m<-S.m[,colnames(S.m) %in% groupA2.cells]#
#
groupB.m<-S.m[,colnames(S.m) %in% groupB.cells]#
groupC.m<-S.m[,colnames(S.m) %in% groupC.cells]#
groupD.m<-S.m[,colnames(S.m) %in% groupD.cells]#
groupE.m<-S.m[,colnames(S.m) %in% groupE.cells]#
groupF.m<-S.m[,colnames(S.m) %in% groupF.cells]#
groupG.m<-S.m[,colnames(S.m) %in% groupG.cells]#
##########################Get All Data###########################################
groupA1.m<-S.m[,colnames(S.m) %in% groupA1.cells]#
groupA1.col.sum<-colSums(groupA1.m)#
groupA1.m<-groupA1.m[,order(groupA1.col.sum)]#
#
groupA2.m<-S.m[,colnames(S.m) %in% groupA2.cells]#
groupA2.col.sum<-colSums(groupA2.m)#
groupA2.m<-groupA2.m[,order(groupA2.col.sum)]#
#
groupB.m<-S.m[,colnames(S.m) %in% groupB.cells]#
groupB.col.sum<-colSums(groupB.m)#
groupB.m<-groupB.m[,order(groupB.col.sum)]#
#
groupC.m<-S.m[,colnames(S.m) %in% groupC.cells]#
groupC.col.sum<-colSums(groupC.m)#
groupC.m<-groupC.m[,order(groupC.col.sum)]#
#
groupD.m<-S.m[,colnames(S.m) %in% groupD.cells]#
groupD.col.sum<-colSums(groupD.m)#
groupD.m<-groupD.m[,order(groupD.col.sum)]#
#
groupE.m<-S.m[,colnames(S.m) %in% groupE.cells]#
groupE.col.sum<-colSums(groupE.m)#
groupE.m<-groupE.m[,order(groupE.col.sum)]#
#
groupF.m<-S.m[,colnames(S.m) %in% groupF.cells]#
groupF.col.sum<-colSums(groupF.m)#
groupF.m<-groupF.m[,order(groupF.col.sum)]#
#
groupG.m<-S.m[,colnames(S.m) %in% groupG.cells]#
groupG.col.sum<-colSums(groupG.m)#
groupG.m<-groupG.m[,order(groupG.col.sum)]#
#
my.data.m<-cbind(groupE.m,groupF.m,groupC.m,groupB.m,groupG.m,groupA2.m,groupA1.m,groupD.m)#
#
##################Heatmap#######################################################
pdf(file="Fig6d.pdf", width=7, height=10, onefile=F, bg="transparent")#
#
r.index<-which(my.anno$Cell %in% groupC.cells)#
my.anno$Stage_2[r.index]<-"pre_BC_8_cells"#
#
F.index<-which(my.anno$Cell %in% groupF.cells)#
my.anno$Stage_2[F.index]<-"pre_BC_CML1266"#
#
p1.index<-which(my.anno$Cell %in% groupA1.cells)#
my.anno$Stage_2[p1.index]<-"BC_OX1931"#
#
p2.index<-which(my.anno$Cell %in% groupA2.cells)#
my.anno$Stage_2[p2.index]<-"BC_CML1266"#
#
p3.index<-which(my.anno$Cell %in% groupG.cells)#
my.anno$Stage_2[p3.index]<-"BC_CML1203"#
#
my.anno.x<-as.character(my.anno$Stage_2)#
#
annotation_col<-data.frame(Cell=as.character(my.anno.x))#
rownames(annotation_col)<-my.anno$Cell#
#
################save data matrix to a file######################################
write.table(my.data.m,file="Fig6d.data.matrix.txt",#
		append=FALSE, sep="\t", quote=FALSE,row.names=TRUE, col.names=TRUE)#
################################################################################
ann_colors = list(#
		Cell = c(BC_CML1203= "deeppink",BC_OX1931= "cyan",#
				BC_CML1266="purple",pre_blast_crisis="orange",#
				normal_hsc="black",diagnosis="brown",#
				pre_BC_8_cells="yellow",pre_BC_CML1266="darkgreen")#
)#
#
library("gplots")#
library(RColorBrewer)#
pheatmap(t(my.data.m),cluster_cols=F,cluster_rows=F,show_colnames=T,show_rownames=F, fontsize_col=10,key=TRUE,symkey=FALSE,keysize = 0.8,annotation_row=annotation_col,#
		annotation_colors=ann_colors,col=colorRampPalette(rev(brewer.pal(n = 9, name = "RdYlBu")))(100),cexRow=0.75,cexCol=0.75)#
#
dev.off()
ann_colors
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig6c.#
################################################################################
################################################################################
my.dat<-read.delim("tSNE_Diagnosis-PreBC-BC-Without-CML1600_Result.txt",header=T)#
#
my.dat$my.color[my.dat$Stage_2=="normal_hsc"]<-adjustcolor( "gray35", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="cell_line"]<-adjustcolor( "sienna", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="diagnosis" | my.dat$Stage_2=="accelerated_phase"]<-adjustcolor( "brown", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931"]<-"orange"#
my.dat$my.color[my.dat$Stage_2=="pre_blast_crisis_CML1266"]<-adjustcolor( "darkgreen", alpha.f = 0.1)#
my.dat$my.color[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="CML1266"]<-adjustcolor( "purple", alpha.f = 0.1)#
my.dat$my.color[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="OX2046"]<-"cyan"#
my.dat$my.color[my.dat$Stage_2=="blast_crisis_1_month_TKI"]<-adjustcolor( "deeppink", alpha.f = 0.1)#
my.dat$type[my.dat$Stage_2=="normal_hsc"]<-19#
my.dat$type[my.dat$Stage_2=="cell_line"]<-19#
my.dat$type[my.dat$Stage_2=="diagnosis" | my.dat$Stage_2=="accelerated_phase"]<-17#
my.dat$type[my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931"]<-23#
my.dat$type[my.dat$Stage_2=="pre_blast_crisis_CML1266"]<-18#
my.dat$type[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="CML1266"]<-15#
my.dat$type[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="OX2046"]<-15#
my.dat$type[my.dat$Stage_2=="blast_crisis_1_month_TKI"]<-15#
#
x1<-which(my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931")#
x2<-which(my.dat$my.color=="cyan")#
#
################save data matrix to a file######################################
write.table(my.dat[c("Cell","Dim1","Dim2","BCR_ABL","Patient",#
						"Stage_2","my.color","type")],file="Fig6c.data.matrix.txt",#
		append=FALSE, sep="\t", quote=FALSE,row.names=FALSE, col.names=TRUE)#
################################################################################
pdf(file="Fig6c-Name.pdf", width=7, height=7, onefile=T, bg="transparent",fonts = NULL,useDingbats=FALSE)#
plot(my.dat$Dim1,my.dat$Dim2,xaxt="n",yaxt="n",xlab="",ylab="",#
		pch =my.dat$type,#
		main="",col = my.dat$my.color,cex=1.5)#
#
points(my.dat$Dim1[x1],my.dat$Dim2[x1],pch=23,bg="orange",cex=1.5,col="black")#
points(my.dat$Dim1[x2],my.dat$Dim2[x2],pch=22,bg="cyan",col="black",cex=1.5)#
text(my.dat$Dim1[x1],my.dat$Dim2[x1],labels=my.dat$Cell,col="black")#
#
legend("topright",c("Pre-BC OX1931","BC of OX1931")#
				,pch=c(18,15),col=c("orange","cyan"),cex=1)#
#
dev.off()
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig6c.#
################################################################################
################################################################################
my.dat<-read.delim("tSNE_Diagnosis-PreBC-BC-Without-CML1600_Result.txt",header=T)#
#
my.dat$my.color[my.dat$Stage_2=="normal_hsc"]<-adjustcolor( "gray35", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="cell_line"]<-adjustcolor( "sienna", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="diagnosis" | my.dat$Stage_2=="accelerated_phase"]<-adjustcolor( "brown", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931"]<-"orange"#
my.dat$my.color[my.dat$Stage_2=="pre_blast_crisis_CML1266"]<-adjustcolor( "darkgreen", alpha.f = 0.1)#
my.dat$my.color[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="CML1266"]<-adjustcolor( "purple", alpha.f = 0.1)#
my.dat$my.color[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="OX2046"]<-"cyan"#
my.dat$my.color[my.dat$Stage_2=="blast_crisis_1_month_TKI"]<-adjustcolor( "deeppink", alpha.f = 0.1)#
my.dat$type[my.dat$Stage_2=="normal_hsc"]<-19#
my.dat$type[my.dat$Stage_2=="cell_line"]<-19#
my.dat$type[my.dat$Stage_2=="diagnosis" | my.dat$Stage_2=="accelerated_phase"]<-17#
my.dat$type[my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931"]<-23#
my.dat$type[my.dat$Stage_2=="pre_blast_crisis_CML1266"]<-18#
my.dat$type[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="CML1266"]<-15#
my.dat$type[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="OX2046"]<-15#
my.dat$type[my.dat$Stage_2=="blast_crisis_1_month_TKI"]<-15#
#
x1<-which(my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931")#
x2<-which(my.dat$my.color=="cyan")#
#
################save data matrix to a file######################################
write.table(my.dat[c("Cell","Dim1","Dim2","BCR_ABL","Patient",#
						"Stage_2","my.color","type")],file="Fig6c.data.matrix.txt",#
		append=FALSE, sep="\t", quote=FALSE,row.names=FALSE, col.names=TRUE)#
################################################################################
pdf(file="Fig6c-Name.pdf", width=7, height=7, onefile=T, bg="transparent",fonts = NULL,useDingbats=FALSE)#
plot(my.dat$Dim1,my.dat$Dim2,xaxt="n",yaxt="n",xlab="",ylab="",#
		pch =my.dat$type,#
		main="",col = my.dat$my.color,cex=1.5)#
#
points(my.dat$Dim1[x1],my.dat$Dim2[x1],pch=23,bg="orange",cex=1.5,col="black")#
points(my.dat$Dim1[x2],my.dat$Dim2[x2],pch=22,bg="cyan",col="black",cex=1.5)#
text(my.dat$Dim1[x1],my.dat$Dim2[x1],labels=my.dat$Cell,col="black",cex=0.3)#
#
legend("topright",c("Pre-BC OX1931","BC of OX1931")#
				,pch=c(18,15),col=c("orange","cyan"),cex=1)#
#
dev.off()
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig6c.#
################################################################################
################################################################################
my.dat<-read.delim("tSNE_Diagnosis-PreBC-BC-Without-CML1600_Result.txt",header=T)#
#
my.dat$my.color[my.dat$Stage_2=="normal_hsc"]<-adjustcolor( "gray35", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="cell_line"]<-adjustcolor( "sienna", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="diagnosis" | my.dat$Stage_2=="accelerated_phase"]<-adjustcolor( "brown", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931"]<-"orange"#
my.dat$my.color[my.dat$Stage_2=="pre_blast_crisis_CML1266"]<-adjustcolor( "darkgreen", alpha.f = 0.1)#
my.dat$my.color[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="CML1266"]<-adjustcolor( "purple", alpha.f = 0.1)#
my.dat$my.color[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="OX2046"]<-"cyan"#
my.dat$my.color[my.dat$Stage_2=="blast_crisis_1_month_TKI"]<-adjustcolor( "deeppink", alpha.f = 0.1)#
my.dat$type[my.dat$Stage_2=="normal_hsc"]<-19#
my.dat$type[my.dat$Stage_2=="cell_line"]<-19#
my.dat$type[my.dat$Stage_2=="diagnosis" | my.dat$Stage_2=="accelerated_phase"]<-17#
my.dat$type[my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931"]<-23#
my.dat$type[my.dat$Stage_2=="pre_blast_crisis_CML1266"]<-18#
my.dat$type[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="CML1266"]<-15#
my.dat$type[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="OX2046"]<-15#
my.dat$type[my.dat$Stage_2=="blast_crisis_1_month_TKI"]<-15#
#
x1<-which(my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931")#
x2<-which(my.dat$my.color=="cyan")#
#
################save data matrix to a file######################################
write.table(my.dat[c("Cell","Dim1","Dim2","BCR_ABL","Patient",#
						"Stage_2","my.color","type")],file="Fig6c.data.matrix.txt",#
		append=FALSE, sep="\t", quote=FALSE,row.names=FALSE, col.names=TRUE)#
################################################################################
pdf(file="Fig6c-Name.pdf", width=7, height=7, onefile=T, bg="transparent",fonts = NULL,useDingbats=FALSE)#
plot(my.dat$Dim1,my.dat$Dim2,xaxt="n",yaxt="n",xlab="",ylab="",#
		pch =my.dat$type,#
		main="",col = my.dat$my.color,cex=1.5)#
#
points(my.dat$Dim1[x1],my.dat$Dim2[x1],pch=23,bg="orange",cex=1.5,col="black")#
points(my.dat$Dim1[x2],my.dat$Dim2[x2],pch=22,bg="cyan",col="black",cex=1.5)#
text(my.dat$Dim1[x1],my.dat$Dim2[x1],labels=my.dat$Cell,col="black",cex=0.2)#
#
legend("topright",c("Pre-BC OX1931","BC of OX1931")#
				,pch=c(18,15),col=c("orange","cyan"),cex=1)#
#
dev.off()
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig6c.#
################################################################################
################################################################################
my.dat<-read.delim("tSNE_Diagnosis-PreBC-BC-Without-CML1600_Result.txt",header=T)#
#
my.dat$my.color[my.dat$Stage_2=="normal_hsc"]<-adjustcolor( "gray35", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="cell_line"]<-adjustcolor( "sienna", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="diagnosis" | my.dat$Stage_2=="accelerated_phase"]<-adjustcolor( "brown", alpha.f = 0.2)#
my.dat$my.color[my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931"]<-"orange"#
my.dat$my.color[my.dat$Stage_2=="pre_blast_crisis_CML1266"]<-adjustcolor( "darkgreen", alpha.f = 0.1)#
my.dat$my.color[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="CML1266"]<-adjustcolor( "purple", alpha.f = 0.1)#
my.dat$my.color[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="OX2046"]<-"cyan"#
my.dat$my.color[my.dat$Stage_2=="blast_crisis_1_month_TKI"]<-adjustcolor( "deeppink", alpha.f = 0.1)#
my.dat$type[my.dat$Stage_2=="normal_hsc"]<-19#
my.dat$type[my.dat$Stage_2=="cell_line"]<-19#
my.dat$type[my.dat$Stage_2=="diagnosis" | my.dat$Stage_2=="accelerated_phase"]<-17#
my.dat$type[my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931"]<-23#
my.dat$type[my.dat$Stage_2=="pre_blast_crisis_CML1266"]<-18#
my.dat$type[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="CML1266"]<-15#
my.dat$type[my.dat$Stage_2=="blast_crisis" & my.dat$Patient=="OX2046"]<-15#
my.dat$type[my.dat$Stage_2=="blast_crisis_1_month_TKI"]<-15#
#
x1<-which(my.dat$Stage_2=="pre_blast_crisis" & my.dat$Patient=="OX1931")#
x2<-which(my.dat$my.color=="cyan")#
#
################save data matrix to a file######################################
write.table(my.dat[c("Cell","Dim1","Dim2","BCR_ABL","Patient",#
						"Stage_2","my.color","type")],file="Fig6c.data.matrix.txt",#
		append=FALSE, sep="\t", quote=FALSE,row.names=FALSE, col.names=TRUE)#
################################################################################
pdf(file="Fig6c-Name.pdf", width=7, height=7, onefile=T, bg="transparent",fonts = NULL,useDingbats=FALSE)#
plot(my.dat$Dim1,my.dat$Dim2,xaxt="n",yaxt="n",xlab="",ylab="",#
		pch =my.dat$type,#
		main="",col = my.dat$my.color,cex=1.5)#
#
points(my.dat$Dim1[x1],my.dat$Dim2[x1],pch=23,bg="orange",cex=1.5,col="black")#
points(my.dat$Dim1[x2],my.dat$Dim2[x2],pch=22,bg="cyan",col="black",cex=1.5)#
text(my.dat$Dim1[x1],my.dat$Dim2[x1],labels=my.dat$Cell[x1],col="black",cex=0.3)#
#
legend("topright",c("Pre-BC OX1931","BC of OX1931")#
				,pch=c(18,15),col=c("orange","cyan"),cex=1)#
#
dev.off()
################################################################################
#Author: Supat Thongjuea, MRC Molecular Haematology Unit, Weatherall Institute of Molecular Medicine, University of Oxford, UK #
#Contact email : supat.thongjuea@ndcls.ox.ac.uk or supat.thongjuea@gmail.com#
#Maintainer: Supat Thongjuea and Alice Giustacchini#
#Title: Single-cell Transcriptomics Uncovers Distinct and Clinically Predictive Molecular Signatures of Stem Cells in Chronic Myeloid Leukemia#
#Journal : Nature Medicine#
#Year : 2017#
################################################################################
#This R script is used to generate Fig6d.#
################################################################################
################################################################################
library(RColorBrewer)#
library(pheatmap)#
################################################################################
my.anno<-read.delim("../Data/CML_PROJECT_ALL_CELLs.Freezed-5.anno.txt",header=T,stringsAsFactors=F)#
my.anno<-subset(my.anno,used4analysis==1)#
my.anno<-subset(my.anno,Stage_2=="pre_blast_crisis" | Stage_2=="blast_crisis"  #
				| Stage_2=="blast_crisis_1_month_TKI" | Stage_2=="normal_hsc" | Stage_2=="diagnosis")#
my.anno<-subset(my.anno,Patient !="OX2046cd19" & Patient !="OX1931cd19")#
my.anno<-subset(my.anno,BCR_ABL=="positive" | Stage_2=="normal_hsc")#
################################################################################
load(file="../Data/CML_PROJECT_ALL_CELLs.rdata")#
my.cells<-CML_PROJECT_ALL_CELLs[,as.character(my.anno$Cell)]#
remove.index<-grep("MIR|SNORA|SNORD",rownames(my.cells))#
my.cells<-my.cells[-c(remove.index),]#
################################################################################
min_expr<-1#
S.m<-as.matrix(my.cells)#
S.m[S.m < min_expr]<- 0#
S.m[S.m >= min_expr]<-log2(S.m[S.m >= min_expr])#
################################################################################
################################################################################
l.genes<-c("BANK1","EBF1","FAIM3","LTB","BLNK","CD19","CD79A","DNTT",#
			"IGJ","IRF8","LEF1","LY86","RAG1",#
			"VPREB1","VPREB3","CD33","CEBPA","CSF1R","ID2",#
			"IL3RA","IL6R","LY6E","MCL1","MPO","MSR1")#
################################################################################
my.dat1<-subset(S.m,rownames(S.m) %in% l.genes)#
#
S.m<-data.frame()#
for(i in 1:length(l.genes)){#
	x.gene<-l.genes[i]#
	x.dat<-subset(my.dat1,rownames(my.dat1)==x.gene)#
	S.m<-rbind(S.m,x.dat)#
}#
################################################################################
groupA.anno<-subset(my.anno,Stage_2=="blast_crisis")#
groupA1.anno<-subset(groupA.anno,Patient=="OX2046")#
groupA1.cells<-as.character(groupA1.anno$Cell)#
#
groupA2.anno<-subset(groupA.anno,Patient=="CML1266")#
groupA2.cells<-as.character(groupA2.anno$Cell)#
my.cells<-c("OX1931D5","OX1931F7","OX1931D10","OX1931H9_1","OX1931A3","OX1931D10_1","OX1931E5_1","OX1931H7_1")#
groupB.anno<-subset(my.anno,Patient=="OX1931")#
r.index<-which(groupB.anno$Cell %in% my.cells)#
groupB.anno<-groupB.anno[-c(r.index),]#
groupB.cells<-as.character(groupB.anno$Cell)#
groupC.cells<-c("OX1931D5","OX1931F7","OX1931D10","OX1931H9_1","OX1931A3","OX1931D10_1","OX1931E5_1","OX1931H7_1")#
groupD.anno<-subset(my.anno,Stage_2=="normal_hsc")#
groupD.cells<-as.character(groupD.anno$Cell)#
#
groupE.anno<-subset(my.anno,Stage_2=="diagnosis")#
groupE.cells<-as.character(groupE.anno$Cell)#
#
groupF.anno<-subset(my.anno,Stage_2=="pre_blast_crisis" & Patient=="CML1266")#
groupF.cells<-as.character(groupF.anno$Cell)#
groupG.anno<-subset(my.anno,Stage_2=="blast_crisis_1_month_TKI")#
groupG.cells<-as.character(groupG.anno$Cell)#
groupA1.m<-S.m[,colnames(S.m) %in% groupA1.cells]#
groupA2.m<-S.m[,colnames(S.m) %in% groupA2.cells]#
#
groupB.m<-S.m[,colnames(S.m) %in% groupB.cells]#
groupC.m<-S.m[,colnames(S.m) %in% groupC.cells]#
groupD.m<-S.m[,colnames(S.m) %in% groupD.cells]#
groupE.m<-S.m[,colnames(S.m) %in% groupE.cells]#
groupF.m<-S.m[,colnames(S.m) %in% groupF.cells]#
groupG.m<-S.m[,colnames(S.m) %in% groupG.cells]#
##########################Get All Data###########################################
groupA1.m<-S.m[,colnames(S.m) %in% groupA1.cells]#
groupA1.col.sum<-colSums(groupA1.m)#
groupA1.m<-groupA1.m[,order(groupA1.col.sum)]#
#
groupA2.m<-S.m[,colnames(S.m) %in% groupA2.cells]#
groupA2.col.sum<-colSums(groupA2.m)#
groupA2.m<-groupA2.m[,order(groupA2.col.sum)]#
#
groupB.m<-S.m[,colnames(S.m) %in% groupB.cells]#
groupB.col.sum<-colSums(groupB.m)#
groupB.m<-groupB.m[,order(groupB.col.sum)]#
#
groupC.m<-S.m[,colnames(S.m) %in% groupC.cells]#
groupC.col.sum<-colSums(groupC.m)#
groupC.m<-groupC.m[,order(groupC.col.sum)]#
#
groupD.m<-S.m[,colnames(S.m) %in% groupD.cells]#
groupD.col.sum<-colSums(groupD.m)#
groupD.m<-groupD.m[,order(groupD.col.sum)]#
#
groupE.m<-S.m[,colnames(S.m) %in% groupE.cells]#
groupE.col.sum<-colSums(groupE.m)#
groupE.m<-groupE.m[,order(groupE.col.sum)]#
#
groupF.m<-S.m[,colnames(S.m) %in% groupF.cells]#
groupF.col.sum<-colSums(groupF.m)#
groupF.m<-groupF.m[,order(groupF.col.sum)]#
#
groupG.m<-S.m[,colnames(S.m) %in% groupG.cells]#
groupG.col.sum<-colSums(groupG.m)#
groupG.m<-groupG.m[,order(groupG.col.sum)]#
#
my.data.m<-cbind(groupE.m,groupF.m,groupC.m,groupB.m,groupG.m,groupA2.m,groupA1.m,groupD.m)#
#
##################Heatmap#######################################################
pdf(file="Fig6d.pdf", width=7, height=10, onefile=F, bg="transparent")#
#
r.index<-which(my.anno$Cell %in% groupC.cells)#
my.anno$Stage_2[r.index]<-"pre_BC_8_cells"#
#
F.index<-which(my.anno$Cell %in% groupF.cells)#
my.anno$Stage_2[F.index]<-"pre_BC_CML1266"#
#
p1.index<-which(my.anno$Cell %in% groupA1.cells)#
my.anno$Stage_2[p1.index]<-"BC_OX1931"#
#
p2.index<-which(my.anno$Cell %in% groupA2.cells)#
my.anno$Stage_2[p2.index]<-"BC_CML1266"#
#
p3.index<-which(my.anno$Cell %in% groupG.cells)#
my.anno$Stage_2[p3.index]<-"BC_CML1203"#
#
my.anno.x<-as.character(my.anno$Stage_2)#
#
annotation_col<-data.frame(Cell=as.character(my.anno.x))#
rownames(annotation_col)<-my.anno$Cell
annotation_col
table(annotation_col$Cell)
